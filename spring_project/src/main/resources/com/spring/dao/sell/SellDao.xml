<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.dao.sell.SellDao">
	<resultMap type="SellVO" id="sellMap">
		<id		property="sell_code" 	 		column="sell_code" />
		<result property="sell_code" 	 		column="sell_code" />
		<result property="sell_price" 	 		column="sell_price" />
		<result property="sell_quantity" 		column="sell_quantity" />
		<result property="sell_creation_date" 	column="sell_creation_date" />
		<result property="sell_user_id" 	 	column="sell_user_id" />
		<result property="sell_detail_code" 	column="sell_detail_code" />
		<result property="sell_condition_code" 	column="sell_condition_code" />
		<collection property="sell_correction_dateList" resultMap="Sell_correction_dateMap"/>
		<collection property="detail_getProduct_code" resultMap="detail_getProduct_codeMap"/>
	</resultMap>
		<resultMap type="sell_cancle_dateVO" id="Sell_cancle_dateMap">
			<result property="sell_code" 			column="sell_code" />
			<result property="sell_cancle_date" 	column="sell_cancle_date" />
		</resultMap>
		
		<resultMap type="sell_correction_dateVO" id="Sell_correction_dateMap">
			<result property="sell_code" 			column="sell_code" />
			<result property="sell_correction_date" 	column="sell_correction_date" />
		</resultMap>
		
		<resultMap type="DetailVO" id="detail_getProduct_codeMap">
			<result property="detail_code" 			column="detail_code" />
			<result property="detail_size_code" 	column="detail_size_code" />
			<result property="detail_product_code" 			column="detail_product_code" />
		</resultMap>
	
	 <select id="sell_readAll" parameterType="java.util.HashMap" resultMap="sellMap">
		 SELECT s.sell_code, s.sell_price, s.sell_quantity, s.sell_creation_date, sc.sell_correction_date, dt.detail_product_code
			FROM sell s
			LEFT OUTER JOIN sell_correction_date sc ON s.sell_code = sc.sell_code
			LEFT OUTER JOIN detail dt ON s.sell_detail_code = dt.detail_code
			WHERE s.sell_user_id = #{sell_user_id}
			order by s.sell_code desc limit #{pstartno}, #{onpagelist} 
	</select>
	
	
	<!-- <select id="sell_readAll" resultMap="sellMap" parameterType="SellVO">
    SELECT s.sell_code, s.sell_price, s.sell_quantity, s.sell_creation_date, sc.sell_correction_date, scd.sell_cancle_date
    FROM sell s
    LEFT OUTER JOIN sell_cancle_date scd ON s.sell_code = scd.sell_code
    LEFT OUTER JOIN sell_correction_date sc ON s.sell_code = sc.sell_code
    WHERE s.sell_user_id = #{sell_user_id}
    order by s.sell_code desc limit #{pstartno}, #{onpagelist} 
</select>

<select id="sell_readAllByMap" resultMap="sellMap" parameterType="java.util.HashMap">
    SELECT s.sell_code, s.sell_price, s.sell_quantity, s.sell_creation_date, sc.sell_correction_date, scd.sell_cancle_date
    FROM sell s
    LEFT OUTER JOIN sell_cancle_date scd ON s.sell_code = scd.sell_code
    LEFT OUTER JOIN sell_correction_date sc ON s.sell_code = sc.sell_code
    WHERE s.sell_user_id = #{sell_user_id}
    order by s.sell_code desc limit #{pstartno}, #{onpagelist} 
</select> -->
	
	<select  id="listcnt"  resultType="int"  >
		 select count(*) from sell
	</select>
	
	<select id="sell_read" resultType="SellVO">
			select * from sell where sell_code=#{sell_code}
	</select>
	
	<!-- sell_read는 확인필요 -->
	<update id="sell_update">
			update sell set sell_price=#{sell_price}, sell_quantity=#{sell_quantity} where sell_code = #{sell_code}
	</update>
	
	<!--  이한동 수정본  -->
	<insert id="sell_insert" useGeneratedKeys="true" keyProperty="sell_code">    
			insert into sell( sell_price, sell_quantity, sell_user_id, sell_detail_code, sell_condition_code ) 
			values ( #{sell_price}, #{sell_quantity}, #{sell_user_id}, #{sell_detail_code}, #{sell_condition_code} )
	</insert>
	<!--  이한동 수정본  -->
	
	<delete id="sell_delete">
		delete from sell where sell_code=#{sell_code}
	</delete>
</mapper>